@model MovieVault.Domain.personne

@{
    ViewBag.Title = "Create";
}

<h2>Register</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="contact-form-wrapper">
        <div class="container">
            <div class="col-sm-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2">

                <form id='contact-form' class="form row" >

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.DTYPE, "User Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => x.DTYPE, new List<SelectListItem>{
                    new SelectListItem() {Text = "Simple User", Value="SimpleUser"},
                    new SelectListItem() {Text = "Cineast", Value="Cineast"},})
                        </div>
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.adress, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.adress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.adress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.etat_civile, "Civil State", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => x.etat_civile, new List<SelectListItem>{
                    new SelectListItem() {Text = "Married", Value="Married"},
                    new SelectListItem() {Text = "Single", Value="Single"},})
                        </div>
                    </div>



                    <br /><br />

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.nom, "Lastname", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.prenom, "Firstname", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.mail, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.mail, "*", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.login, "Login", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.login, "*", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "*", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.phone, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone, "*", new { @class = "text-danger" })
                        </div>
                    </div>





                    
                            <input type="submit" value="Create" class="btn btn-md btn--danger" />
                        
</form>
</div>
            </div></div>
            }

            @*<div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }*@
